{"version":3,"sources":["components/PostModal.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","../node_modules/@material-ui/core/esm/DialogActions/DialogActions.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","components/DeletePostModal.js","pages/Post.js"],"names":["useStyles","makeStyles","theme","root","width","titleInput","marginBottom","spacing","form","display","flexDirection","textAlign","form_input","height","form_input_textarea","form_input_button","alignSelf","padding","fontWeight","backgroundColor","indigo","borderRadius","PostModal","userId","id","title","body","currentAction","classes","React","useState","open","setOpen","useForm","register","handleSubmit","errors","dispatch","useDispatch","variant","color","onClick","onClose","onSubmit","data","e","updateCurrentPost","className","name","defaultValue","ref","type","required","exampleRequired","value","createPost","Divider","props","_props$absolute","absolute","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","other","_objectWithoutProperties","_extends","clsx","vertical","withStyles","margin","border","flexShrink","palette","divider","position","bottom","left","inset","marginLeft","fade","middle","marginRight","DialogActions","_props$disableSpacing","disableSpacing","alignItems","justifyContent","flex","DialogTitle","children","_props$disableTypogra","disableTypography","Typography","DeletePostModal","postId","handleClose","Button","Dialog","aria-labelledby","aria-describedby","DialogContent","DialogContentText","deleteCurrentPost","autoFocus","button","postContainer","card","cardContent","flexGrow","buttonBack","postTitle","postText","cardActions","commentsTitle","commentsContainer","marginTop","maxWidth","commentsCard","Post","useSelector","state","currentPost","comments","currentPostData","isLoading","match","params","useEffect","getComments","Preloader","Grid","container","to","Card","CardContent","gutterBottom","CardActions","map","comment","commentsCardContent","email"],"mappings":"wRAYMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,MAAO,SAGXC,WAAY,CACVC,aAAcJ,EAAMK,QAAQ,IAE9BC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfN,MAAO,SACPO,UAAW,UAEbC,WAAY,CACVN,aAAcJ,EAAMK,QAAQ,GAC5BM,OAAQX,EAAMK,QAAQ,IAExBO,oBAAqB,CACnBR,aAAcJ,EAAMK,QAAQ,GAC5BM,OAAQX,EAAMK,QAAQ,KAExBQ,kBAAmB,CACjBC,UAAW,SACXZ,MAAOF,EAAMK,QAAQ,IACrBU,QAASf,EAAMK,QAAQ,GACvBW,WAAY,OACZC,gBAAiBC,IAAO,KACxBC,aAAc,WAILC,EAAY,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,GAAIC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cAC7CC,EAAU5B,IADuD,EAE/C6B,IAAMC,UAAS,GAFgC,mBAEhEC,EAFgE,KAE1DC,EAF0D,OAI5BC,cAAnCC,EAJ+D,EAI/DA,SAAUC,EAJqD,EAIrDA,aAAcC,EAJuC,EAIvCA,OAE1BC,EAAWC,cAoBjB,OACE,gCACE,cAAC,IAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAUC,QApBvB,WACtBT,GAAQ,IAmBN,SACGL,IAEH,cAAC,IAAD,CAAQI,KAAMA,EAAMW,QAnBJ,WAClBV,GAAQ,IAkBN,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAmBR,GAAG,2BAAtB,UACqB,SAAlBG,GACC,uBACEgB,SAAUR,GApBD,SAACS,EAAMC,GAC5BR,EAASS,YAAkBvB,EAAQC,EAAIoB,EAAKnB,MAAOmB,EAAKlB,OACxDM,GAAQ,MAmBIe,UAAWnB,EAAQpB,KAFrB,UAIE,0CACA,uBACEuC,UAAWnB,EAAQhB,WACnBoC,KAAK,QACLC,aAAcxB,EACdyB,IAAKhB,EACLiB,KAAK,SAEP,yCACA,0BACEJ,UAAWnB,EAAQd,oBACnBkC,KAAK,OACLC,aAAcvB,EACdwB,IAAKhB,EAAS,CAAEkB,UAAU,IAC1BD,KAAK,UAENf,EAAOiB,iBAAmB,uDAE3B,uBACEN,UAAWnB,EAAQb,kBACnBoC,KAAK,SACLG,MAAM,YAIO,sBAAlB3B,GACC,uBACEgB,SAAUR,GA7CD,SAACS,EAAMC,GAC5BR,EAASkB,YAAWhC,EAAQqB,EAAKnB,MAAOmB,EAAKlB,OAC7CM,GAAQ,MA4CIe,UAAWnB,EAAQpB,KAFrB,UAIE,0CACA,uBACEuC,UAAWnB,EAAQhB,WACnBoC,KAAK,QACLC,aAAa,OACbC,IAAKhB,EACLiB,KAAK,SAEP,yCACA,0BACEJ,UAAWnB,EAAQd,oBACnBkC,KAAK,OACLE,IAAKhB,EAAS,CAAEkB,UAAU,IAC1BD,KAAK,UAENf,EAAOiB,iBAAmB,uDAE3B,uBACEN,UAAWnB,EAAQb,kBACnBoC,KAAK,SACLG,MAAM,wB,4LC9EpBE,EAAuB3B,cAAiB,SAAiB4B,EAAOP,GAClE,IAAIQ,EAAkBD,EAAME,SACxBA,OAA+B,IAApBD,GAAqCA,EAChD9B,EAAU6B,EAAM7B,QAChBmB,EAAYU,EAAMV,UAClBa,EAAmBH,EAAMI,UACzBC,OAAiC,IAArBF,EAA8B,KAAOA,EACjDG,EAAkBN,EAAMO,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAeR,EAAMS,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAqBV,EAAMW,YAC3BA,OAAqC,IAAvBD,EAAgC,aAAeA,EAC7DE,EAAcZ,EAAMa,KACpBA,OAAuB,IAAhBD,EAAuC,OAAdP,EAAqB,iBAAcS,EAAYF,EAC/EG,EAAiBf,EAAMlB,QACvBA,OAA6B,IAAnBiC,EAA4B,YAAcA,EACpDC,EAAQC,YAAyBjB,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,WAAY,QAAS,cAAe,OAAQ,YAE1I,OAAoB5B,gBAAoBiC,EAAWa,YAAS,CAC1D5B,UAAW6B,YAAKhD,EAAQzB,KAAM4C,EAAuB,cAAZR,GAA2BX,EAAQW,GAAUoB,GAAY/B,EAAQ+B,SAAUK,GAAYpC,EAAQoC,SAAUE,GAAStC,EAAQsC,MAAuB,aAAhBE,GAA8BxC,EAAQiD,UAChNP,KAAMA,EACNpB,IAAKA,GACJuB,OA+DUK,eAvIK,SAAgB5E,GAClC,MAAO,CAELC,KAAM,CACJU,OAAQ,EACRkE,OAAQ,EAERC,OAAQ,OACRC,WAAY,EACZ9D,gBAAiBjB,EAAMgF,QAAQC,SAIjCxB,SAAU,CACRyB,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNlF,MAAO,QAITmF,MAAO,CACLC,WAAY,IAIdtB,MAAO,CACL/C,gBAAiBsE,YAAKvF,EAAMgF,QAAQC,QAAS,MAI/CO,OAAQ,CACNF,WAAYtF,EAAMK,QAAQ,GAC1BoF,YAAazF,EAAMK,QAAQ,IAI7BsE,SAAU,CACRhE,OAAQ,OACRT,MAAO,GAIT4D,SAAU,CACRhD,UAAW,UACXH,OAAQ,WA0FoB,CAChCmC,KAAM,cADO8B,CAEZtB,G,oCCzHCoC,EAA6B/D,cAAiB,SAAuB4B,EAAOP,GAC9E,IAAI2C,EAAwBpC,EAAMqC,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DjE,EAAU6B,EAAM7B,QAChBmB,EAAYU,EAAMV,UAClB0B,EAAQC,YAAyBjB,EAAO,CAAC,iBAAkB,UAAW,cAE1E,OAAoB5B,gBAAoB,MAAO8C,YAAS,CACtD5B,UAAW6B,YAAKhD,EAAQzB,KAAM4C,GAAY+C,GAAkBlE,EAAQrB,SACpE2C,IAAKA,GACJuB,OA6BUK,cAxDK,CAElB3E,KAAM,CACJM,QAAS,OACTsF,WAAY,SACZ9E,QAAS,EACT+E,eAAgB,WAChBC,KAAM,YAIR1F,QAAS,CACP,yBAA0B,CACxBiF,WAAY,KA2CgB,CAChCxC,KAAM,oBADO8B,CAEZc,G,kBCjDCM,EAA2BrE,cAAiB,SAAqB4B,EAAOP,GAC1E,IAAIiD,EAAW1C,EAAM0C,SACjBvE,EAAU6B,EAAM7B,QAChBmB,EAAYU,EAAMV,UAClBqD,EAAwB3C,EAAM4C,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/D3B,EAAQC,YAAyBjB,EAAO,CAAC,WAAY,UAAW,YAAa,sBAEjF,OAAoB5B,gBAAoB,MAAO8C,YAAS,CACtD5B,UAAW6B,YAAKhD,EAAQzB,KAAM4C,GAC9BG,IAAKA,GACJuB,GAAQ4B,EAAoBF,EAAwBtE,gBAAoByE,IAAY,CACrFzC,UAAW,KACXtB,QAAS,MACR4D,OA8BUrB,cApDK,CAElB3E,KAAM,CACJ4E,OAAQ,EACR9D,QAAS,YACTgF,KAAM,aA+CwB,CAChCjD,KAAM,kBADO8B,CAEZoB,G,uBCnDUK,EAAkB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACrB3E,IAAMC,UAAS,GADM,mBACtCC,EADsC,KAChCC,EADgC,KAGvCK,EAAWC,cAWXmE,EAAc,WAClBzE,GAAQ,IAGV,OACE,gCACE,cAAC0E,EAAA,EAAD,CAAQnE,QAAQ,WAAWC,MAAM,UAAUC,QAfvB,WACtBT,GAAQ,IAcN,oBAGA,eAAC2E,EAAA,EAAD,CACE5E,KAAMA,EACNW,QAAS+D,EACTG,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,cAAC,EAAD,CAAarF,GAAG,qBAAhB,SACG,oDAEH,cAACsF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAmBvF,GAAG,2BAAtB,0BAIF,eAAC,EAAD,WACE,cAACkF,EAAA,EAAD,CAAQjE,QA7BK,WACnBJ,EAAS2E,YAAkBR,IAE3BxE,GAAQ,IA0B6BQ,MAAM,UAArC,iBAGA,cAACkE,EAAA,EAAD,CAAQjE,QAASgE,EAAajE,MAAM,UAAUyE,WAAS,EAAvD,0B,yBCjCJjH,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCgH,OAAQ,CACN5G,aAAcJ,EAAMK,QAAQ,IAE9B4G,cAAe,CACb1G,QAAS,OACTC,cAAe,UAGjB0G,KAAM,CACJvG,OAAQ,OACRJ,QAAS,QAGX4G,YAAa,CACXC,SAAU,GAEZC,WAAY,CACVjH,aAAcJ,EAAMK,QAAQ,IAE9BiH,UAAW,CACTvG,QAASf,EAAMK,QAAQ,IAEzB4E,QAAS,CACP7E,aAAcJ,EAAMK,QAAQ,IAG9BkH,SAAU,CACRnH,aAAcJ,EAAMK,QAAQ,IAE9BmH,YAAa,CACX1B,eAAgB,YAElB2B,cAAe,CACblH,QAAS,OACTuF,eAAgB,cAElB4B,kBAAmB,CACjBC,UAAW3H,EAAMK,QAAQ,GACzBD,aAAcJ,EAAMK,QAAQ,GAC5BE,QAAS,OACTuF,eAAgB,aAChB8B,SAAU,SAGZC,aAAc,CACZF,UAAW3H,EAAMK,QAAQ,QAIhByH,EAAO,SAACvE,GACnB,IAAM7B,EAAU5B,IADa,EAEoBiI,aAC/C,SAACC,GAAD,OAAWA,EAAMC,eADXC,EAFqB,EAErBA,SAAUC,EAFW,EAEXA,gBAAiBC,EAFN,EAEMA,UAI/B9B,GAAU/C,EAAM8E,MAAMC,OAAOhC,OAC7BjF,GAAUkC,EAAM8E,MAAMC,OAAOjH,OAE3Bc,EAAWC,cAKjB,OAJAmG,qBAAU,WACRpG,EAASqG,YAAYlC,MACpB,CAACnE,EAAUmE,IAEV8B,EAAkB,cAACK,EAAA,EAAD,IAEjBN,EAAgB5G,MAWnB,qCACE,eAACmH,EAAA,EAAD,CAAM7F,UAAWnB,EAAQuF,cAAe0B,WAAS,EAAjD,UACE,cAAC,IAAD,CAAS9F,UAAWnB,EAAQ2F,WAAYuB,GAAE,iBAAYvH,GAAtD,qBAGA,cAACwH,EAAA,EAAD,CAAMhG,UAAWnB,EAAQwF,KAAzB,SACE,eAAC4B,EAAA,EAAD,WACE,cAAC1C,EAAA,EAAD,CACEvD,UAAWnB,EAAQ4F,UACnByB,cAAY,EACZ1G,QAAQ,KACRsB,UAAU,KAJZ,SAMGwE,EAAgB5G,QAEnB,cAAC,EAAD,CAASsB,UAAWnB,EAAQuD,UAC5B,cAACmB,EAAA,EAAD,CAAYvD,UAAWnB,EAAQ6F,SAA/B,SACGY,EAAgB3G,OAEnB,eAACwH,EAAA,EAAD,CAAanG,UAAWnB,EAAQ8F,YAAhC,UACE,cAACpG,EAAA,EAAD,CACEC,OAAQ8G,EAAgB9G,OACxBC,GAAI6G,EAAgB7G,GACpBC,MAAO4G,EAAgB5G,MACvBC,KAAM2G,EAAgB3G,KACtBC,cAAc,SAEhB,cAAC,EAAD,CAAiB6E,OAAQA,eAKjC,eAACoC,EAAA,EAAD,CAAM7F,UAAWnB,EAAQgG,kBAAmBiB,WAAS,EAArD,UACE,cAACvC,EAAA,EAAD,CACEvD,UAAWnB,EAAQ+F,cACnBpF,QAAQ,KACRsB,UAAU,KAHZ,sBAOCuE,EAASe,KAAI,SAACC,GAAD,OACZ,cAACL,EAAA,EAAD,CAAoBhG,UAAWnB,EAAQmG,aAAvC,SACE,eAACiB,EAAA,EAAD,CAAajG,UAAWnB,EAAQyH,oBAAhC,UACE,cAAC/C,EAAA,EAAD,CAAY2C,cAAY,EAAC1G,QAAQ,KAAKsB,UAAU,KAAhD,SACGuF,EAAQpG,OAEX,cAACsD,EAAA,EAAD,UAAa8C,EAAQE,QACrB,cAAChD,EAAA,EAAD,UAAa8C,EAAQ1H,WANd0H,YAlDf,qCACE,cAAC,IAAD,CAASrG,UAAWnB,EAAQ2F,WAAYuB,GAAE,iBAAYvH,GAAtD,qBAGA","file":"static/js/5.ced019da.chunk.js","sourcesContent":["import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateCurrentPost } from '../redux/currentPost-reducer'\r\nimport { useForm } from 'react-hook-form'\r\nimport { indigo } from '@material-ui/core/colors'\r\nimport { createPost } from '../redux/posts-reducer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      width: '100%',\r\n    },\r\n  },\r\n  titleInput: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '500px ',\r\n    textAlign: 'center',\r\n  },\r\n  form_input: {\r\n    marginBottom: theme.spacing(5),\r\n    height: theme.spacing(4),\r\n  },\r\n  form_input_textarea: {\r\n    marginBottom: theme.spacing(5),\r\n    height: theme.spacing(40),\r\n  },\r\n  form_input_button: {\r\n    alignSelf: 'center',\r\n    width: theme.spacing(10),\r\n    padding: theme.spacing(1),\r\n    fontWeight: 'bold',\r\n    backgroundColor: indigo[200],\r\n    borderRadius: '5px',\r\n  },\r\n}))\r\n\r\nexport const PostModal = ({ userId, id, title, body, currentAction }) => {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const { register, handleSubmit, errors } = useForm()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const onSubmitUpdate = (data, e) => {\r\n    dispatch(updateCurrentPost(userId, id, data.title, data.body))\r\n    setOpen(false)\r\n  }\r\n\r\n  const onSubmitCreate = (data, e) => {\r\n    dispatch(createPost(userId, data.title, data.body))\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {currentAction}\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {currentAction === 'Edit' && (\r\n              <form\r\n                onSubmit={handleSubmit(onSubmitUpdate)}\r\n                className={classes.form}\r\n              >\r\n                <label>Title</label>\r\n                <input\r\n                  className={classes.form_input}\r\n                  name=\"title\"\r\n                  defaultValue={title}\r\n                  ref={register}\r\n                  type=\"text\"\r\n                />\r\n                <label>Body</label>\r\n                <textarea\r\n                  className={classes.form_input_textarea}\r\n                  name=\"body\"\r\n                  defaultValue={body}\r\n                  ref={register({ required: true })}\r\n                  type=\"input\"\r\n                />\r\n                {errors.exampleRequired && <p>This field is required</p>}\r\n\r\n                <input\r\n                  className={classes.form_input_button}\r\n                  type=\"submit\"\r\n                  value=\"Save\"\r\n                />\r\n              </form>\r\n            )}\r\n            {currentAction === 'Create a new post' && (\r\n              <form\r\n                onSubmit={handleSubmit(onSubmitCreate)}\r\n                className={classes.form}\r\n              >\r\n                <label>Title</label>\r\n                <input\r\n                  className={classes.form_input}\r\n                  name=\"title\"\r\n                  defaultValue=\"test\"\r\n                  ref={register}\r\n                  type=\"text\"\r\n                />\r\n                <label>Body</label>\r\n                <textarea\r\n                  className={classes.form_input_textarea}\r\n                  name=\"body\"\r\n                  ref={register({ required: true })}\r\n                  type=\"input\"\r\n                />\r\n                {errors.exampleRequired && <p>This field is required</p>}\r\n\r\n                <input\r\n                  className={classes.form_input_button}\r\n                  type=\"submit\"\r\n                  value=\"Save\"\r\n                />\r\n              </form>\r\n            )}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport { useDispatch } from 'react-redux'\r\nimport { deleteCurrentPost } from '../redux/currentPost-reducer'\r\n\r\nexport const DeletePostModal = ({ postId }) => {\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deleteCurrentPost(postId))\r\n\r\n    setOpen(false)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Delete\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {'Are you sure that you want to delete this post?'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Post title\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDelete} color=\"primary\">\r\n            Yes\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            No\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport { DeletePostModal } from '../components/DeletePostModal'\r\nimport { PostModal } from '../components/PostModal'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getComments, setLoading } from '../redux/currentPost-reducer'\r\nimport { Preloader } from '../components/Preloader'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginBottom: theme.spacing(8),\r\n  },\r\n  postContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n  },\r\n\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  buttonBack: {\r\n    marginBottom: theme.spacing(5),\r\n  },\r\n  postTitle: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  divider: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n\r\n  postText: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  cardActions: {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  commentsTitle: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  commentsContainer: {\r\n    marginTop: theme.spacing(5),\r\n    marginBottom: theme.spacing(5),\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    maxWidth: '700px',\r\n  },\r\n\r\n  commentsCard: {\r\n    marginTop: theme.spacing(5),\r\n  },\r\n}))\r\n\r\nexport const Post = (props) => {\r\n  const classes = useStyles()\r\n  const { comments, currentPostData, isLoading } = useSelector(\r\n    (state) => state.currentPost\r\n  )\r\n\r\n  let postId = +props.match.params.postId\r\n  let userId = +props.match.params.userId\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(getComments(postId))\r\n  }, [dispatch, postId])\r\n\r\n  if (isLoading) return <Preloader />\r\n\r\n  if (!currentPostData.title)\r\n    return (\r\n      <>\r\n        <NavLink className={classes.buttonBack} to={`/posts/${userId}`}>\r\n          Go Back\r\n        </NavLink>\r\n        <h1>Your post was deleted</h1>\r\n      </>\r\n    )\r\n\r\n  return (\r\n    <>\r\n      <Grid className={classes.postContainer} container>\r\n        <NavLink className={classes.buttonBack} to={`/posts/${userId}`}>\r\n          Go Back\r\n        </NavLink>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography\r\n              className={classes.postTitle}\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              component=\"h2\"\r\n            >\r\n              {currentPostData.title}\r\n            </Typography>\r\n            <Divider className={classes.divider} />\r\n            <Typography className={classes.postText}>\r\n              {currentPostData.body}\r\n            </Typography>\r\n            <CardActions className={classes.cardActions}>\r\n              <PostModal\r\n                userId={currentPostData.userId}\r\n                id={currentPostData.id}\r\n                title={currentPostData.title}\r\n                body={currentPostData.body}\r\n                currentAction=\"Edit\"\r\n              />\r\n              <DeletePostModal postId={postId} />\r\n            </CardActions>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid className={classes.commentsContainer} container>\r\n        <Typography\r\n          className={classes.commentsTitle}\r\n          variant=\"h5\"\r\n          component=\"h2\"\r\n        >\r\n          Comments\r\n        </Typography>\r\n        {comments.map((comment) => (\r\n          <Card key={comment} className={classes.commentsCard}>\r\n            <CardContent className={classes.commentsCardContent}>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {comment.name}\r\n              </Typography>\r\n              <Typography>{comment.email}</Typography>\r\n              <Typography>{comment.body}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n"],"sourceRoot":""}