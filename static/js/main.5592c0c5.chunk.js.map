{"version":3,"sources":["components/HomeIcon.js","components/Header.js","App.js","redux/redux-store.js","index.js","api/api.js","api/posts-api.js","redux/posts-reducer.js","api/users-api.js","redux/users-reducer.js","api/currentPost-api.js","redux/currentPost-reducer.js","components/Preloader.js"],"names":["HomeIcon","props","SvgIcon","fontSize","style","color","blue","d","useStyles","makeStyles","theme","appBar","backgroundColor","icon","marginRight","spacing","Header","classes","AppBar","className","position","Toolbar","to","cardGrid","paddingTop","UsersPage","React","lazy","then","module","default","Users","PostsPage","Posts","PostPage","Post","App","dispatch","useDispatch","useEffect","getUsers","Fragment","Container","maxWidth","fallback","Preloader","exact","path","render","rootReducer","combineReducers","users","usersReducer","posts","postsReducer","currentPost","currentPostReducer","composeEnchancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","instance","postsAPI","get","id","a","axios","response","data","create","userId","title","body","all","post","SET_POSTS","SET_CURRENT_POSTS_USER","DELETE_POST","UPDATE_POST","initialState","currentPostsUser","setPosts","state","action","type","user","filter","postId","map","updatedPost","setCurrentPostsUser","deletePost","updatePost","getPosts","getState","createPost","usersAPI","SET_USERS","currentPostAPI","getCurrentComments","getCurrentPost","updateCurrentPost","put","deleteCurrentPost","delete","SET_COMMENTS","SET_CURRENT_POST_DATA","SET_LOADING","comments","currentPostData","isLoading","setCurrentPostData","value","setLoading","getComments","getPost","root","display","justifyContent","marginLeft","top","right","zIndex","size"],"mappings":"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","file":"static/js/main.5592c0c5.chunk.js","sourcesContent":["import React from 'react'\r\nimport { blue } from '@material-ui/core/colors'\r\nimport SvgIcon from '@material-ui/core/SvgIcon'\r\n\r\nexport const HomeIcon = (props) => {\r\n  return (\r\n    <SvgIcon fontSize=\"large\" style={{ color: blue[500] }} color=\"primary\">\r\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n    </SvgIcon>\r\n  )\r\n}\r\n","import { AppBar, makeStyles, Toolbar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { HomeIcon } from './HomeIcon'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    backgroundColor: '#2e333b',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}))\r\n\r\nexport const Header = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <AppBar className={classes.appBar} position=\"fixed\">\r\n        <Toolbar>\r\n          <NavLink to=\"/\">\r\n            <HomeIcon className={classes.icon} />\r\n          </NavLink>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  )\r\n}\r\n","import React, { Suspense, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport { Header } from './components/Header'\nimport { Route, Switch } from 'react-router'\nimport { Preloader } from './components/Preloader'\nimport { useDispatch } from 'react-redux'\nimport { getUsers } from './redux/users-reducer'\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(16),\n  },\n}))\n\nconst UsersPage = React.lazy(() =>\n  import('./pages/Users').then((module) => ({\n    default: module.Users,\n  }))\n)\nconst PostsPage = React.lazy(() =>\n  import('./pages/Posts').then((module) => ({\n    default: module.Posts,\n  }))\n)\nconst PostPage = React.lazy(() =>\n  import('./pages/Post').then((module) => ({\n    default: module.Post,\n  }))\n)\n\nexport default function App() {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(getUsers())\n  }, [])\n  return (\n    <React.Fragment>\n      <Header />\n\n      <main>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          <Suspense\n            fallback={\n              <div>\n                <Preloader />\n              </div>\n            }\n          >\n            <Switch>\n              <Route exact path=\"/\" render={() => <UsersPage />} />\n              <Route\n                exact\n                path=\"/posts/:userId?\"\n                render={(props) => <PostsPage {...props} />}\n              />\n              <Route\n                path=\"/post/:userId?/:postId?\"\n                render={(props) => <PostPage {...props} />}\n              />\n            </Switch>\n          </Suspense>\n        </Container>\n      </main>\n    </React.Fragment>\n  )\n}\n","import usersReducer from './users-reducer'\r\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport postsReducer from './posts-reducer'\r\nimport currentPostReducer from './currentPost-reducer'\r\n\r\nlet rootReducer = combineReducers({\r\n  users: usersReducer,\r\n  posts: postsReducer,\r\n  currentPost: currentPostReducer,\r\n})\r\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnchancers(applyMiddleware(thunkMiddleware))\r\n)\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './redux/redux-store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","export const instance = 'https://jsonplaceholder.typicode.com'\r\n","import axios from 'axios'\r\nimport { instance } from './api'\r\nexport const postsAPI = {\r\n  get: async (id) => {\r\n    const response = await axios.get(`${instance}/posts?userId=${id}`)\r\n\r\n    return response.data\r\n  },\r\n\r\n  create: async (userId, title, body) => {\r\n    const response = await axios.all([\r\n      axios.post(`${instance}/posts`, {\r\n        userId,\r\n        title,\r\n        body,\r\n      }),\r\n      axios.get(`${instance}/posts?userId=${userId}`),\r\n    ])\r\n\r\n    return response\r\n  },\r\n}\r\n","import { postsAPI } from '../api/posts-api'\r\nconst SET_POSTS = 'posts-reducer/setPosts'\r\nconst SET_CURRENT_POSTS_USER = 'posts-reducer/setCurrentPostsUser'\r\nconst DELETE_POST = 'posts-reducer/deletePost'\r\nconst UPDATE_POST = 'posts-reducer/updatePost'\r\n\r\nlet initialState = {\r\n  posts: [],\r\n  currentPostsUser: {},\r\n}\r\n\r\nconst postsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_POSTS: {\r\n      return {\r\n        ...state,\r\n        posts: [...action.posts],\r\n      }\r\n    }\r\n    case SET_CURRENT_POSTS_USER: {\r\n      return {\r\n        ...state,\r\n        currentPostsUser: { ...action.user },\r\n      }\r\n    }\r\n    case DELETE_POST: {\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts.filter((post) => post.id !== action.postId)],\r\n      }\r\n    }\r\n\r\n    case UPDATE_POST: {\r\n      return {\r\n        ...state,\r\n        posts: [\r\n          ...state.posts.map((post) => {\r\n            if (post.id === action.updatedPost.id) {\r\n              return { ...action.updatedPost }\r\n            }\r\n            return post\r\n          }),\r\n        ],\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default postsReducer\r\n\r\nexport const setPosts = (posts) => ({\r\n  type: SET_POSTS,\r\n  posts,\r\n})\r\n\r\nexport const setCurrentPostsUser = (user) => ({\r\n  type: SET_CURRENT_POSTS_USER,\r\n  user,\r\n})\r\nexport const deletePost = (postId) => ({\r\n  type: DELETE_POST,\r\n  postId,\r\n})\r\n\r\nexport const updatePost = (updatedPost) => ({\r\n  type: UPDATE_POST,\r\n  updatedPost,\r\n})\r\n\r\nexport const getPosts = (id) => {\r\n  return async (dispatch, getState) => {\r\n    let response = await postsAPI.get(id)\r\n\r\n    dispatch(setCurrentPostsUser(getState().users.users[id - 1]))\r\n    dispatch(setPosts(response))\r\n  }\r\n}\r\nexport const createPost = (userId, title, body) => {\r\n  return async (dispatch, getState) => {\r\n    let response = await postsAPI.create(userId, title, body)\r\n\r\n    dispatch(setCurrentPostsUser(getState().users.users[userId - 1]))\r\n    dispatch(setPosts([...response[1].data, response[0].data]))\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport { instance } from './api'\r\nexport const usersAPI = {\r\n  get: async () => {\r\n    const response = await axios.get(`${instance}/users`)\r\n\r\n    return response.data\r\n  },\r\n}\r\n","import { usersAPI } from '../api/users-api'\r\nconst SET_USERS = 'users-reducer/setUsers'\r\n\r\nlet initialState = {\r\n  users: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USERS: {\r\n      return {\r\n        ...state,\r\n        users: [...action.users],\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default usersReducer\r\n\r\nexport const setUsers = (users) => ({\r\n  type: SET_USERS,\r\n  users,\r\n})\r\n\r\nexport const getUsers = () => {\r\n  return async (dispatch, getState) => {\r\n    let response = await usersAPI.get()\r\n\r\n    dispatch(setUsers(response))\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport { instance } from './api'\r\n\r\nexport const currentPostAPI = {\r\n  getCurrentComments: async (postId) => {\r\n    const response = await axios.get(`${instance}/comments?postId=${postId}`)\r\n\r\n    return response.data\r\n  },\r\n\r\n  getCurrentPost: async (postId) => {\r\n    const response = await axios.get(`${instance}/posts/${postId}`)\r\n\r\n    return response.data\r\n  },\r\n\r\n  updateCurrentPost: async (userId, id, title, body) => {\r\n    const response = await axios.put(`${instance}/posts/${id}`, {\r\n      userId,\r\n      id,\r\n      title,\r\n      body,\r\n    })\r\n\r\n    return response.data\r\n  },\r\n\r\n  deleteCurrentPost: async (postId) => {\r\n    const response = await axios.delete(`${instance}/posts/${postId}`)\r\n\r\n    return response.data\r\n  },\r\n}\r\n","import { currentPostAPI } from '../api/currentPost-api'\r\nimport { deletePost, updatePost } from './posts-reducer'\r\nconst SET_COMMENTS = 'posts-reducer/setComments'\r\nconst SET_CURRENT_POST_DATA = 'posts-reducer/currentPostData'\r\nconst SET_LOADING = 'posts-reducer/setLoading'\r\n\r\nlet initialState = {\r\n  comments: [],\r\n  currentPostData: {},\r\n  isLoading: false,\r\n}\r\n\r\nconst currentPostReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_COMMENTS: {\r\n      return {\r\n        ...state,\r\n        comments: [...action.comments],\r\n      }\r\n    }\r\n    case SET_CURRENT_POST_DATA: {\r\n      return {\r\n        ...state,\r\n        currentPostData: { ...action.data },\r\n      }\r\n    }\r\n\r\n    case SET_LOADING: {\r\n      return {\r\n        ...state,\r\n        isLoading: action.value,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default currentPostReducer\r\n\r\nexport const setComments = (comments) => ({\r\n  type: SET_COMMENTS,\r\n  comments,\r\n})\r\n\r\nexport const setCurrentPostData = (data) => ({\r\n  type: SET_CURRENT_POST_DATA,\r\n  data,\r\n})\r\n\r\nexport const setLoading = (value) => ({\r\n  type: SET_LOADING,\r\n  value,\r\n})\r\n\r\nexport const getComments = (postId) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(setLoading(true))\r\n    let response = await currentPostAPI.getCurrentComments(postId)\r\n    dispatch(getPost(postId))\r\n    dispatch(setComments(response))\r\n\r\n    dispatch(setLoading(false))\r\n  }\r\n}\r\n\r\nexport const getPost = (postId) => {\r\n  return async (dispatch, getState) => {\r\n    let response = await currentPostAPI.getCurrentPost(postId)\r\n\r\n    dispatch(setCurrentPostData(response))\r\n  }\r\n}\r\n\r\nexport const updateCurrentPost = (userId, id, title, body) => {\r\n  return async (dispatch, getState) => {\r\n    let response = await currentPostAPI.updateCurrentPost(\r\n      userId,\r\n      id,\r\n      title,\r\n      body\r\n    )\r\n\r\n    dispatch(setCurrentPostData(response))\r\n    dispatch(updatePost(response))\r\n  }\r\n}\r\nexport const deleteCurrentPost = (postId) => {\r\n  return async (dispatch, getState) => {\r\n    let response = await currentPostAPI.deleteCurrentPost(postId)\r\n\r\n    dispatch(setCurrentPostData(response))\r\n    dispatch(deletePost(postId))\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n    position: 'absolute',\r\n    top: '30%',\r\n    right: '50%',\r\n    zIndex: 9999,\r\n  },\r\n}))\r\n\r\nexport const Preloader = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size={100} color=\"secondary\" />\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}